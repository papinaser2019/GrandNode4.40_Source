@model ProductDetailsModel
@using System.Globalization
@using Nop.Core.Domain.Catalog
@using Nop.Services.Helpers
@inject CatalogSettings catalogSettings
@inject IUserAgentHelper userAgentHelper
@if (Model.IsRental)
{
	<link href="/css/nopfarsiStyle.min.css" rel="stylesheet" />
    Html.AppendCssFileParts("~/lib/bootstrap/css/bootstrap.rtl.css");
    Html.AppendCssFileParts("~/css/jquery.Bootstrap-PersianDateTimePicker.min.css");

    Html.AppendScriptParts("~/lib/bootstrap/js/bootstrap.min.js");
    Html.AppendScriptParts("~/js/jalaali.min.js");
    Html.AppendScriptParts("~/js/jquery.Bootstrap-PersianDateTimePicker.min.js");

	<input type="hidden" id="status" value="@ViewBag.Status" />

	<script type="text/javascript">
    $(document).ready(function ()
    {
        
        {
            $(".attributes.rental-attributes").replaceWith($("#nopfarsi_Rental"));
            $("#nopfarsi_Rental").css("display", "block");
        }
    });
    </script>

    <div id="nopfarsi_Rental" class="nopfarsi-attributes attributes rental-attributes" style="display: none">
        @{
            var startDateControlId = $"rental_start_date_{Model.Id}";
            var endDateControlId = $"rental_end_date_{Model.Id}";
            //currenly we support only this format
            //java-script format
            const string datePickerFormat = "mm/dd/yy";
            //C# format for ToString method
            const string datePickerFormat2 = "MM/dd/yyyy";
            var isMobileDevice = userAgentHelper.IsMobileDevice();
            <div class="attribute-item">
                <div class="attribute-label">
                    <label class="text-prompt">
                        @T("Products.RentalStartDate"):
                    </label>
                    <span class="required">*</span>
                </div>
                <div class="attribute-data">
                    <input id="@(startDateControlId)"
                           name="@(startDateControlId)" type="hidden"
                           value="@Model.RentalStartDate?.ToString(datePickerFormat2, CultureInfo.InvariantCulture)"
                           @if (isMobileDevice) { <text> readonly</text>} />

                    <div class="input-group">
                        @*<div class="input-group-addon" data-mddatetimepicker="true" data-trigger="click"
                                   data-targetselector="#T@(startDateControlId)"
                                   data-placement="bottom" data-englishnumber="false" data-isgregorian="false"
                                   data-format="yyyy/MM/dd" data-enabletimepicker="false">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </div>*@
                        <input type="text" class="form-control"
                               id="T@(startDateControlId)"
                               placeholder="تاريخ شروع"
                               data-targetselector="#T@(startDateControlId)"
                               data-mddatetimepicker="true" data-placement="bottom" data-englishnumber="false"
                               data-isgregorian="false" data-format="yyyy/MM/dd"
                               data-enabletimepicker="false" />
                    </div>
                </div>
            </div>
            <div class="attribute-item">
                 <div class="attribute-label">
                    <label class="text-prompt">
                        @T("Products.RentalEndDate"):
                    </label>
                    <span class="required">*</span>
                </div>
                <div class="attribute-data">
                    <input id="@(endDateControlId)"
                           name="@(endDateControlId)" type="hidden"
                           value="@Model.RentalStartDate?.ToString(datePickerFormat2, CultureInfo.InvariantCulture)"
                           @if (isMobileDevice) { <text> readonly</text>} />

                    <div class="input-group">
                        @*<div class="input-group-addon" data-mddatetimepicker="true" data-trigger="click"
                                   data-targetselector="#T@(endDateControlId)"
                                   data-placement="bottom" data-englishnumber="false" data-isgregorian="false"
                                   data-format="yyyy/MM/dd" data-enabletimepicker="false">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </div>*@
                        <input type="text" class="form-control"
                               id="T@(endDateControlId)"
                               placeholder="تاريخ پايان"
                               data-targetselector="#T@(endDateControlId)"
                               data-mddatetimepicker="true" data-placement="bottom" data-englishnumber="false"
                               data-isgregorian="false" data-format="yyyy/MM/dd"
                               data-enabletimepicker="false" />
                    </div>
                </div>
            </div>
			<!--generate nopfarsi.ir-->
        }

        <script asp-location="Footer">
			$(document).ready(function()
			{
				function getGregorianDateTime(persianDateTime)
				{
					var d = new Date(persianDateTime.MdPersianDateTimePicker('getDate'));
					var year = d.getFullYear();
					var month = d.getMonth() + 1;
					var day = d.getDate();
					month = month <= 9 ? "0" + month.toString() : month.toString();
					day = day <= 9 ? "0" + day.toString() : day.toString();
					var result = month +
						"/" +
						day +
						"/" +
						year;
					return result;
				}

				$("#T@(startDateControlId)").change(function()
				{
					var myDatePicker = $("#T@(startDateControlId)");
					var myGregorian = $("#@startDateControlId");

					if (myDatePicker.val() !== "" && myDatePicker.val() !== null)
					{
						var gregorianStartDateTime = getGregorianDateTime(myDatePicker);
						//alert("gregorianStartDateTime = " + gregorianStartDateTime);
						myGregorian.val(gregorianStartDateTime);
					}
					else
					{
						myGregorian.val(null);
					}
				});

				$("#T@(endDateControlId)").change(function()
				{
					var myDatePicker = $("#T@(endDateControlId)");
					var myGregorian = $("#@endDateControlId");

					if (myDatePicker.val() !== "" && myDatePicker.val() !== null)
					{
						var gregorianStartDateTime = getGregorianDateTime(myDatePicker);
						//alert("gregorianStartDateTime = " + gregorianStartDateTime);
						myGregorian.val(gregorianStartDateTime);
					}
					else
					{
						myGregorian.val(null);
					}
					//alert(myGregorian.val());
				});
			});


            function onRentalDatePickerSelect() {
                @{
                    //almost the same implementation is used in the \Views\Product\_ProductAttributes.cshtml file
                    var productId = Model.Id;
                    if (catalogSettings.AjaxProcessAttributeChange)
                    {
                        <text>
                        $.ajax({
                            cache: false,
                            url: '@Html.Raw(Url.Action("productdetails_attributechange", "shoppingcart", new {productId = productId, validateAttributeConditions = false, loadPicture = false }))',
                            data: $('#product-details-form').serialize(),
                            type: 'post',
                            success: function(data) {
                                if (data.sku) {
                                    $('#sku-@productId').text(data.sku);
                                }
                                if (data.mpn) {
                                    $('#mpn-@productId').text(data.mpn);
                                }
                                if (data.gtin) {
                                    $('#gtin-@productId').text(data.gtin);
                                }
                                if (data.price) {
                                    $('.price-value-@productId').text(data.price);
                                }
                            }
                        });
                        </text>
                    }
                }
            }
        </script>
    </div>
}